/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  DeFiCrowdFunding,
  DeFiCrowdFundingInterface,
} from "../../contracts/DeFiCrowdFunding";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_startDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endDate",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_usdcTokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "MINIMUM_INVESTMENT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "checkUpkeep",
    outputs: [
      {
        internalType: "bool",
        name: "upkeepNeeded",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "performData",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "endDate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "invest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "investments",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "investors",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minimumReached",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "performUpkeep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "refunds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "startDate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalInvestment",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "usdcToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawRefund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526000600760006101000a81548160ff0219169083151502179055503480156200002c57600080fd5b506040516200116e3803806200116e83398181016040528101906200005291906200014f565b826000819055508160018190555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050620001ab565b600080fd5b6000819050919050565b620000c481620000af565b8114620000d057600080fd5b50565b600081519050620000e481620000b9565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200011782620000ea565b9050919050565b62000129816200010a565b81146200013557600080fd5b50565b60008151905062000149816200011e565b92915050565b6000806000606084860312156200016b576200016a620000aa565b5b60006200017b86828701620000d3565b93505060206200018e86828701620000d3565b9250506040620001a18682870162000138565b9150509250925092565b610fb380620001bb6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80634585e33b1161008c57806396b988621161006657806396b98862146101ef578063bc3da5351461021f578063c24a0f8b1461024f578063e565eb4c1461026d576100cf565b80634585e33b146101845780636e04ff0d146101a05780638a4660fe146101d1576100cf565b80630b97bc86146100d457806310ea13df146100f2578063110f88741461011057806311eac8551461011a5780632afcf480146101385780633feb5f2b14610154575b600080fd5b6100dc61028b565b6040516100e991906108ef565b60405180910390f35b6100fa610291565b60405161010791906108ef565b60405180910390f35b610118610297565b005b610122610413565b60405161012f9190610989565b60405180910390f35b610152600480360381019061014d91906109da565b610439565b005b61016e600480360381019061016991906109da565b61063d565b60405161017b9190610a28565b60405180910390f35b61019e60048036038101906101999190610aa8565b61067c565b005b6101ba60048036038101906101b59190610aa8565b6106dd565b6040516101c8929190610ba0565b60405180910390f35b6101d9610733565b6040516101e691906108ef565b60405180910390f35b61020960048036038101906102049190610bfc565b61073c565b60405161021691906108ef565b60405180910390f35b61023960048036038101906102349190610bfc565b610754565b60405161024691906108ef565b60405180910390f35b61025761076c565b60405161026491906108ef565b60405180910390f35b610275610772565b6040516102829190610c29565b60405180910390f35b60005481565b60065481565b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811161031e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031590610ca1565b60405180910390fd5b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060003373ffffffffffffffffffffffffffffffffffffffff168260405161038990610cf2565b60006040518083038185875af1925050503d80600081146103c6576040519150601f19603f3d011682016040523d82523d6000602084013e6103cb565b606091505b505090508061040f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040690610d53565b60405180910390fd5b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600054421061047d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047490610dbf565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016104dc93929190610ddf565b6020604051808303816000875af11580156104fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051f9190610e42565b506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054036105cb576004339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461061a9190610e9e565b9250508190555080600660008282546106339190610e9e565b9250508190555050565b6004818154811061064d57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600054421015801561069b5750600760009054906101000a900460ff16155b156106d9576402540be40060065410156106bc576106b7610785565b6106d8565b6001600760006101000a81548160ff0219169083151502179055505b5b5050565b600060606000805442101580156107015750600760009054906101000a900460ff16155b90506000600154421015905081806107165750805b935060405180602001604052806000815250925050509250929050565b6402540be40081565b60036020528060005260406000206000915090505481565b60056020528060005260406000206000915090505481565b60015481565b600760009054906101000a900460ff1681565b60005b6004805490508110156108d3576000600482815481106107ab576107aa610ed2565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905080600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080600660008282546108729190610f01565b925050819055506000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505080806108cb90610f35565b915050610788565b50565b6000819050919050565b6108e9816108d6565b82525050565b600060208201905061090460008301846108e0565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061094f61094a6109458461090a565b61092a565b61090a565b9050919050565b600061096182610934565b9050919050565b600061097382610956565b9050919050565b61098381610968565b82525050565b600060208201905061099e600083018461097a565b92915050565b600080fd5b600080fd5b6109b7816108d6565b81146109c257600080fd5b50565b6000813590506109d4816109ae565b92915050565b6000602082840312156109f0576109ef6109a4565b5b60006109fe848285016109c5565b91505092915050565b6000610a128261090a565b9050919050565b610a2281610a07565b82525050565b6000602082019050610a3d6000830184610a19565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610a6857610a67610a43565b5b8235905067ffffffffffffffff811115610a8557610a84610a48565b5b602083019150836001820283011115610aa157610aa0610a4d565b5b9250929050565b60008060208385031215610abf57610abe6109a4565b5b600083013567ffffffffffffffff811115610add57610adc6109a9565b5b610ae985828601610a52565b92509250509250929050565b60008115159050919050565b610b0a81610af5565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610b4a578082015181840152602081019050610b2f565b60008484015250505050565b6000601f19601f8301169050919050565b6000610b7282610b10565b610b7c8185610b1b565b9350610b8c818560208601610b2c565b610b9581610b56565b840191505092915050565b6000604082019050610bb56000830185610b01565b8181036020830152610bc78184610b67565b90509392505050565b610bd981610a07565b8114610be457600080fd5b50565b600081359050610bf681610bd0565b92915050565b600060208284031215610c1257610c116109a4565b5b6000610c2084828501610be7565b91505092915050565b6000602082019050610c3e6000830184610b01565b92915050565b600082825260208201905092915050565b7f4e6f20726566756e6420617661696c61626c6500000000000000000000000000600082015250565b6000610c8b601383610c44565b9150610c9682610c55565b602082019050919050565b60006020820190508181036000830152610cba81610c7e565b9050919050565b600081905092915050565b50565b6000610cdc600083610cc1565b9150610ce782610ccc565b600082019050919050565b6000610cfd82610ccf565b9150819050919050565b7f526566756e64207472616e73666572206661696c656400000000000000000000600082015250565b6000610d3d601683610c44565b9150610d4882610d07565b602082019050919050565b60006020820190508181036000830152610d6c81610d30565b9050919050565b7f496e766573746d656e7420706572696f642068617320656e6465640000000000600082015250565b6000610da9601b83610c44565b9150610db482610d73565b602082019050919050565b60006020820190508181036000830152610dd881610d9c565b9050919050565b6000606082019050610df46000830186610a19565b610e016020830185610a19565b610e0e60408301846108e0565b949350505050565b610e1f81610af5565b8114610e2a57600080fd5b50565b600081519050610e3c81610e16565b92915050565b600060208284031215610e5857610e576109a4565b5b6000610e6684828501610e2d565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ea9826108d6565b9150610eb4836108d6565b9250828201905080821115610ecc57610ecb610e6f565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610f0c826108d6565b9150610f17836108d6565b9250828203905081811115610f2f57610f2e610e6f565b5b92915050565b6000610f40826108d6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610f7257610f71610e6f565b5b60018201905091905056fea264697066735822122085b66fd010c5e1ed7a7f4d90f1ea1b14aaf3691aa2a7bb36f352fbc3dcd751ce64736f6c63430008130033";

type DeFiCrowdFundingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DeFiCrowdFundingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DeFiCrowdFunding__factory extends ContractFactory {
  constructor(...args: DeFiCrowdFundingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _startDate: BigNumberish,
    _endDate: BigNumberish,
    _usdcTokenAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _startDate,
      _endDate,
      _usdcTokenAddress,
      overrides || {}
    );
  }
  override deploy(
    _startDate: BigNumberish,
    _endDate: BigNumberish,
    _usdcTokenAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _startDate,
      _endDate,
      _usdcTokenAddress,
      overrides || {}
    ) as Promise<
      DeFiCrowdFunding & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DeFiCrowdFunding__factory {
    return super.connect(runner) as DeFiCrowdFunding__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DeFiCrowdFundingInterface {
    return new Interface(_abi) as DeFiCrowdFundingInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DeFiCrowdFunding {
    return new Contract(address, _abi, runner) as unknown as DeFiCrowdFunding;
  }
}
